name: Tests
on: [push, pull_request]
jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python-version: 3.9, os: ubuntu-latest }
          - { python-version: 3.9, os: windows-latest }
          - { python-version: 3.9, os: macos-latest }
          - { python-version: 3.8, os: ubuntu-latest }
          - { python-version: 3.7, os: ubuntu-latest }
    name: Python ${{ matrix.python-version }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3.0.2
        with:
          path: cookiecutter-test
      - uses: actions/setup-python@v4.3.1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tools using pip
        working-directory: cookiecutter-test
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pip install --constraint=.github/workflows/constraints.txt cookiecutter nox toml
      - name: Generate project using Cookiecutter
        run: cookiecutter --no-input cookiecutter-test
      - name: Create git repository
        if: matrix.os != 'windows-latest'
        run: |
          git init
          git config --local user.name "GitHub Action"
          git config --local user.email "action@github.com"
          git add .
          git commit --message="Initial import"
        working-directory: instance
      - name: Create git repository (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          git init
          git config --local user.name "GitHub Action"
          git config --local user.email "action@github.com"
          # https://github.com/cookiecutter/cookiecutter/issues/405
          $ErrorActionPreference = "Continue"
          git add .
          $ErrorActionPreference = "Stop"
          git add --renormalize .
          git commit --message="Initial import"
        working-directory: instance
      - name: Compute cache key for pre-commit
        if: matrix.os != 'windows-latest'
        id: cache_key
        shell: python
        run: |
          import hashlib
          import sys

          python = "py{}.{}".format(*sys.version_info[:2])
          payload = sys.version.encode() + sys.executable.encode()
          digest = hashlib.sha256(payload).hexdigest()
          result = "${{ runner.os }}-{}-{}-pre-commit".format(python, digest)

          print("::set-output name=result::{}".format(result))
      - uses: actions/cache@v3.0.4
        if: matrix.os != 'windows-latest'
        with:
          path: ~/.cache/pre-commit
          key: ${{ steps.cache_key.outputs.result }}-${{ hashFiles('instance/.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ steps.cache_key.outputs.result }}-
      - name: Run test suite using Nox
        run: nox --force-color -e tests xdoctest docs-build # "pre-commit" has some error only present in CI
        working-directory: instance
